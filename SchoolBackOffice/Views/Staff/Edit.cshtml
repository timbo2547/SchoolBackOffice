@model EditStaffViewModel

@{
    ViewData["Title"] = "Edit Staff Member";
}

<h1>@ViewData["Title"]</h1>
<div class="row">
    <div class="col-md-8">
        <section>
            <form asp-controller="Staff" asp-action="Edit" asp-route-staffuserid="@ViewData["StaffUserId"]" method="post" class="form-horizontal" role="form" >
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <div class="form-group">
                    <label asp-for="FirstName" class="col-md-2 control-label"></label>
                    <div class="col-md-10">
                        <input asp-for="FirstName" class="form-control" />
                        <span asp-validation-for="FirstName" class="text-danger"></span>
                    </div>
                </div>
                
                <div class="form-group">
                    <label asp-for="LastName" class="col-md-2 control-label"></label>
                    <div class="col-md-10">
                        <input asp-for="LastName" class="form-control" />
                        <span asp-validation-for="LastName" class="text-danger"></span>
                    </div>
                </div>

                <div class="form-group">
                    <label asp-for="Email" class="col-md-2 control-label"></label>
                    <div class="col-md-10">
                        <input asp-for="Email" class="form-control" />
                        <span asp-validation-for="Email" class="text-danger"></span>
                    </div>
                </div>
                
                <div class="form-group">
                    <label asp-for="Roles" class="col-md-2 control-label"></label>
                    <div class="col-md-10">
                        <table>
                            @for (var i = 0; i < Model.Roles.Count; i++)
                            {
                                <tr>
                                    <td>
                                        @Html.CheckBoxFor(x => x.Roles[i].IsSelected)
                                    </td>
                                    <td>
                                        @Html.HiddenFor(x => x.Roles[i].Name)
                                        @Model.Roles[i].Name
                                    </td>
                                </tr>
                            }
                        </table>
                    </div>
                </div>

                <div class="form-group">
                    <label asp-for="Password" class="col-md-2 control-label"></label>
                    <div class="col-md-10">
                        <input asp-for="Password" class="form-control" />
                        <span asp-validation-for="Password" class="text-danger"></span>
                    </div>
                </div>                
                
                <div class="form-group">
                    <label asp-for="ConfirmPassword" class="col-md-2 control-label"></label>
                    <div class="col-md-10">
                        <input asp-for="ConfirmPassword" class="form-control" />
                        <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                    </div>
                </div>
                
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <button type="submit" class="btn btn-primary">Update</button>
                    </div>
                </div>
                
            </form>            
        </section>
    </div>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}

